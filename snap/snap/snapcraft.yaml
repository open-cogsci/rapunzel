name: rapunzel
title: Rapunzel
base: core20
version: "0.5.38-snap1"
summary: Code editor for numerical computing with Python and R
description: |
  __Rapunzel__ is a modern code editor for numerical computing with Python and R.
  
  Features:
  
  - An intuitive workflow
  - Quickly run projects, files, cells, selections, or lines of code
  - Import from and export to Jupyter Notebook
  - Export code, comments, output, and figures to `.html`, `.pdf`, or `.docx`
  - Powerful visual debugging and workspace inspection
  - Experimental support for language servers
  
  This Snap package is bundled with:
  
  - Commonly used Python libraries for numerical computing (`numpy`, `scipy`, `datamatrix`, `pandas`), plotting (`matplotlib`, `seaborn`), and statistics (`statsmodels`)
  - Pandoc for exporting code, comments, output, and figures to various formats
  - A Jupyter / IPython console for interactive computing
  
  You can use `pip install` to install additional packages into the Python environment of this Snap package (by entering `!pip3 install [package name]` into the console). However, the Snap format is not very suitable for installing additional software. If you want to use Rapunzel in a custom environment, for example with R, please see https://rapunzel.cogsci.nl for different ways of installing Rapunzel.
  
icon: snap/gui/rapunzel.svg

grade: stable
confinement: strict

package-repositories:
  - type: apt
    ppa: smathot/rapunzel
    
# This is where pip looks for the vendor wheels
layout:
  /usr/share/python-wheels:
    bind: $SNAP/usr/share/python-wheels

parts:
    rapunzel:
        plugin: nil
        stage-packages:
          # Rapunzel and recommended dependencies
          - python3-rapunzel
          - python3-levenshtein
          - python3-prettytable
          - xdg-utils  # pyqode.core folder browser
          - python3-distutils
          # Basic numerical Python environment
          - python3-statsmodels
          - python3-seaborn
          - python3-matplotlib
          - python3-pandas
          - python3-scipy
          - python3-numpy
          # For importing and exporting
          - python3-nbformat
          - python3-jupyter-core
          - jupyter-client
          - jupyter-core
          - jupyter-nbconvert
          - pandoc
          # Pip comes with 'vendor' dependencies that are installed as wheels
          # in /usr/share/python-wheels. A layout is defined above to make
          # sure that the wheels actually end up there.
          - python3-pip
          - python-pip-whl
    # Required for Python multiprocessing
    semwraplib:
        plugin: dump
        source: src
        override-build: |
            snapcraftctl build
            mkdir -p $SNAPCRAFT_PART_INSTALL/lib
            gcc -g -O0 -Wall -Wstrict-prototypes -fPIC -shared lib.c -o $SNAPCRAFT_PART_INSTALL/lib/semwraplib.so -ldl
        build-packages:
        - build-essential

environment:
  PYTHONPATH: "$HOME/.local/lib/python3.8/site-packages:$SNAP/usr/lib/python3/dist-packages/:$SNAP/usr/lib/python3.8/:$PYTHONPATH"
  LD_LIBRARY_PATH: "$SNAP/usr/lib/x86_64-linux-gnu/:$SNAP/usr/lib/x86_64-linux-gnu/blas:$SNAP/usr/lib/x86_64-linux-gnu/lapack:$LD_LIBRARY_PATH"
  QT_PLUGIN_PATH: "$SNAP/usr/lib/x86_64-linux-gnu/qt5/plugins/:$QT_PLUGIN_PATH"
  OPENSESAME_EXTENSION_PATH: "$SNAP/usr/share/opensesame_extensions/"
  OPENSESAME_PLUGIN_PATH: "$SNAP/usr/share/opensesame_plugins/"
  OPENSESAME_RESOURCES_PATH: "$SNAP/usr/share/opensesame_resources/"
  MATPLOTLIBDATA: "$SNAP/usr/share/matplotlib/mpl-data/"
  MATPLOTLIBRC: "$SNAP/etc/matplotlibrc"
  XDG_DATA_HOME: "$SNAP/usr/share/"

apps:
    rapunzel:
        command: usr/bin/rapunzel
        plugs:
          - desktop
          - desktop-legacy
          - home
          - opengl
          - x11
          - wayland
          - network
        # Required for Python multiprocessing
        environment:
            LD_PRELOAD: $SNAP/lib/semwraplib.so
